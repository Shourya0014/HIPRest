# ------------------------------------------------------------------------
# Copyright (c) 2021 megvii-model. All Rights Reserved.
# ------------------------------------------------------------------------
# Modified from BasicSR (https://github.com/xinntao/BasicSR)
# Copyright 2018-2020 BasicSR Authors
# ------------------------------------------------------------------------
# general settings
name: GoPro-HINet
model_type: ImageRestorationModel
scale: 1
num_gpu: 1
manual_seed: 10

datasets:
  train:
    name: gopro-train
    type: PairedImageDataset
    # dataroot_gt: ./datasets/GoPro/train/sharp_crops.lmdb
    dataroot_gt: datasets\results\GoPro_results\train_results
    # dataroot_lq: ./datasets/GoPro/train/blur_crops.lmdb
    dataroot_lq: datasets\train\GoPro\input_crops

    filename_tmpl: '{}'
    io_backend:
      # type: lmdb
      type: disk

    gt_size: 256
    # gt_size: 512
    use_flip: true
    use_rot: true

    # data loader
    use_shuffle: true
    # num_worker_per_gpu: 8
    num_worker_per_gpu: 2
    batch_size_per_gpu: 1
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: gopro-test
    type: PairedImageDataset
    # dataroot_gt: ./datasets/GoPro/test/target.lmdb
    dataroot_gt: datasets\results\GoPro_results\val_results
    # dataroot_lq: ./datasets/GoPro/test/input.lmdb
    dataroot_lq: datasets\val\GoPro\input_crops
    io_backend:
      # type: lmdb
      type: disk

# network structures
network_g:
  type: HINet
  # wf: 64
  wf: 16
  hin_position_left: 3
  hin_position_right: 4

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  # resume_state: ~
  resume_state: experiments\GoPro-HINet\training_states\200000.state
  visualization: visual/ntire2021-demo

# training settings
train:
  optim_g:
    type: Adam
    lr: !!float 2e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    # # type: TrueCosineAnnealingLR
    # # T_max: 400000
    # T_max: 200000
    # eta_min: !!float 1e-7
    #stablize the metric with below code
    type: CosineAnnealingRestartLR
    periods: [215000]   # Single cosine cycle
    restart_weights: [1]
    eta_min: !!float 1e-5

  # total_iter: 400000
  total_iter: 215000
  warmup_iter: -1 # no warm up
  ema_decay: 0.999   #added line

  # losses
  # pixel_opt:
  #   type: PSNRLoss
  #   loss_weight: 0.5
  #   reduction: mean
  
  #changes in the code below
  pixel_opt:
    type: DistillationLoss
    loss_weight: 1.0
    reduction: mean
    loss_student: L1Loss
    loss_distill: L1Loss
    alpha: 0.3
    beta: 0.7


# validation settings
val:
  # val_freq: !!float 5e4
  val_freq: 10000
  save_img: false
  grids: true
  crop_size: 256
  # max_minibatch: 8
  max_minibatch: 1

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
    ssim:
      type: calculate_ssim
      crop_border: 0
      test_y_channel: false


# logging settings
logger:
  # print_freq: 200
  print_freq: 500
  # save_checkpoint_freq: !!float 2e4
  save_checkpoint_freq: 5000
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
